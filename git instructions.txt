В нужной папке инициализировать git
git init
создать пользователя
git config --global user.name "katerina"
email
git config --global user.email "katerinakreuz@gmail.com"
посмотреть все настройки
git config --list
игнорирование файлов
создать файл .gitignore (notepad в помощь)
в самом файле пишется имя игнорируемой папки (например logs/) и косая черта(чтобы касалось всех файлов)
комментарии в таком файле начинаются с #
docs/*.txt - игнорирование файлов txt в папке docs

git status показывает инфу о всех файлах проекта

добавление файлов в git
git add .

git rm --cashed имя файла, кот надо удалить - удалить уже добавленный файл

сохранить состояние (на которое позже можно откатиться)
git commit -a -m"init"

после изменения в файле нужно их закоммитить (добавить новую версию)
сначала его нужно проиндексировать
git add "index.php" (также можно индексировать все файл php - *.php)

закоммитить добавленный только что файл
git commit -m"add files"

отменить изменения (откатиться)
git checkout -- имя файла

просмотр истории
git log

q - выход из истории

git help log
в более норм форме
git log --pretty=format:"%h - %an, %ar : %s"
последние коммиты
git log --since=2.weeks

git log -p -2 - последнее собственносделанные изменения

git commit
появляется vim
наверху комменты
esc
внизу :x
и идет сохранение

создание новой ветки
git checkout -b название новой

git branch - просмотр веток
-v - вкратце просмотр последнего комита

git checkout имя ветки - переключение на ветку

Merge
git merge имя ветки, кот будем заливать
git config --global merge.tool kdiff3

просмотр удаленных репозиториев
git remote (-v)
fetch откуда
push - куда

все закомиченные изменения идут в удаленный репозиторий
get push -u origin master